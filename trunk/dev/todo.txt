Create a GN_diff_solve function
==================
DEFAULT SOLVER:
   GN_one_step_diff_solve
Add Wiener filter form to speed up

  - talk to Bill about estimates of covariance inverses 
==================
Change code that uses iso_f_smooth to use the proper RtR_prior formulation
===============
think through how the cache is managed. esp for read-only installs
===============
merge eidors_model_params and fix_models
 rename fix_models
===============
Gmsh code eidors
===============
 OCTAVE DIRECTORY NAMES
   - move to something like x86_64-linux etc
   - get new code into startup which detects the system
   - compile mex file for various oses
===============
EIDORS:RELEASE 3.6
 - fix eidors colorbar - give proper location
 - movement jacobians
     - separate code for movement and conductivity
     - calc_move_and_conductivity_jacobian.m 
     - think about how to depricate aa_e_move_jacobian
     - have explicit function that does perturbation jacobian
 - movement priors
     - calc_move_and_conductivity_prior( move_prior_fun, conductivity_prior_fcn)
       - maybe with some defaults for each case

    - PLAN => M.Crabb to create general functions

 - PLAN => AA create a "papers" section of htdocs => click on paper => tutorials

 - Next, test in 3D
    - issue is here: delVm_pert = pp.N2E*(Vc_delta - pp.Vc) / delta; (line 181)
   
    - PLAN => M.Crabb take a look and then setup call.


 - Factor out all the electrode code in the ng_mk* functions
     and put it into a ng_define_electrodes function 

     - Next, create a fourth parameter to control the depth of the electrode shape


EIDORS:TODO
 - deform_cylinder - use proper fit like a fourier fit.
 - mk_c2f_circ_mapping - not quite right fitting
 - move np stuff to background. Change aa to the defaults.
 - unit_test_cmp - print tolerance of comparison

 - add_noise - work for matrix noise
             - then update temporal_solver01

 - merge choose_imdl
 - update select_imdl to reflect best practice
 - \ => forward_solver
 - library_model => accept simulation
 - BG's colourbar
 - ng_mk_closed_contour - rename + make tutorial
 - unify the 'extra' code handing in ng_mk ...
 - move absolute tutorials into functions in main code

 - migrate aa_fwd_parameters to fix_model
 - see if we need bs_calc_system_mat
 - see if we need object_in_tank_2d
 - see if we need examples, or move to tutorials

 - fix gaussian_HPF_prior
     - work in 3D like laplace_image_prior

 - remove examples and integrate with tutorials

 - put defaults for functions
I like the idea of having a defaults in each function, but I think the np_fwd_solve is a level to low. The choice is between np_fwd_solve and aa_fwd_solve, etc. so perhaps it would make sense to put the defaults in fwd_solve itself. Then we could put mdl.solve = 'defualt';

===================
Problems with calc_move_jacobian.m - only with 3D models
===================
Cleanup calc_colours to clean up handling of image_field
   parameter.
  - code also in eidors_colours, scale_for_display, 
  - probably need new colourbar functions

Fix colourbar -> make work with Camille's code, too.
===================
ng_mk_ ... models
  - put in unit test code
  - allow each to call with multiple extra parameters
  - start to refactor electrode code
==================
noser_image_prior
  - may fail on this line (change in spdiags in new matlab)
    Reg = spdiags( diag_col.^exponent, 0, l_prior, l_prior);
=================
There is an inconsistency between
   mk_grid_models - which has its own pixels
and
   calc_slices - which does its own interpolation
Generally, this means that the pictures from calc_slices
are even smoother than they should be. 

also show_slices is crufty
% TODO: because we wanted (back in 2005) to let show_slices
% handle lots of different scenarios (calling with images and
% without. It is now crufty ... and should be changed.
=================
one important feature would be to add code introspection.
This would allow you to know if a given algorithm can support
   linear reconstruction, etc.

One way to enfore this is to add modes to every piece of code
   function('UNIT_TEST')
   function('CAPABILITY_LIST')
etc.
==================
NEW DIRECTORY STRUCTURE:
 ON THE PATH:
   eidors/
     - license, startup

   eidors/models
     - entry level functions for models

   eidors/meshing
   eidors/meshing/distmesh
   eidors/meshing/gmsh
   eidors/meshing/netgen

   eidors/solvers
     - entry level functions for solvers
   eidors/solvers/inverse
   eidors/solvers/forward

   eidors/algorithms
     - functions to process EIT images (eg. find_frc)

   eidors/examples
   eidors/sample_data
     - a small collection of sample data to play with

   eidors/tools
     - unit_tests
     - mesh fixers
     - evaluation programs
     - test if models have standard fields

   eidors/interface
     - read and write file formats
     - interface to other software (ie Toast)

   eidors/graphics
     - general graphics functions
   eidors/graphics/matlab
   eidors/graphics/vtk


LOW LEVEL DIRECTORIES

   eidors/arch
     - architecture specific (ie mex files)
   eidors/arch/octave
   eidors/arch/matlab

   eidors/cache
     - default, but let users choose where to cache

   eidors/deprecated
     - functions named for particular people (aa, np, etc)

 NOT THE PATH:
   eidors/compatibility
     - compatibility for old eidors code. Stuff that has
       was taken out of deprecated. (not for 3.6)

   eidors/tests 
   dev/name
    - place for work before it moves to release
    - here we have individually named directories
   htdocs/ ...

OLD:
   eidors/
   eidors/algorithms
   eidors/algorithms/t_dai
   eidors/algorithms/b_grychtol
   eidors/algorithms/m_crabb
   eidors/algorithms/a_borsic
   eidors/algorithms/d_stephenson
   eidors/algorithms/b_sawicki
   eidors/algorithms/a_adler
   eidors/algorithms/b_lionheart
   eidors/algorithms/b_graham
   eidors/algorithms/c_gomez
   eidors/algorithms/n_polydorides
   eidors/algorithms/m_vauhkonen
   eidors/arch
   eidors/arch/octave
   eidors/arch/octave/x86_64-pc-linux-gnu
   eidors/arch/octave/pc
   eidors/arch/matlab
   eidors/arch/matlab/dll
   eidors/tests
   eidors/sample_data
   eidors/examples
   eidors/tools
   eidors/meshing
   eidors/meshing/distmesh
   eidors/meshing/gmsh
   eidors/meshing/netgen
   eidors/models
   eidors/models/cache
   eidors/models/s_murphy
   eidors/models/b_grychtol
   eidors/models/d_stephenson
   eidors/models/a_adler
   eidors/models/m_vauhkonen
   eidors/graphics_matlab
   eidors/interface
   eidors/graphics_vtk
