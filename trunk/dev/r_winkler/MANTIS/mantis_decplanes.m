function [stimr,VMr] = mantis_decplanes(stim,VM,Npp,P)
%MANTIS_DECPLANES "multiple electrode planes" have a weird data scructure.
% Decompose plane data to get individual (reduced) data sets of each plane
%   Inputs:
%   stim - EIDORS stimulation pattern, as generated by mk_stim_pattern
%   VM   - measured voltages
%   Npp  - number of electrodes per plane
%   P    - number of electrode planes (as in "multiple belt" measurements)
%   Output:
%   cell arrays of stimulations and measurements per plane
%
% (C) 2015 Robert Winkler. License: GPL version 2 or version 3

clear stimr
Spr = length(stim)/P; % stimulations per plane
Nmeas = 0;            % current number of measurements

fixmeas = false;

for k=1:P
  clear stimt;
  VMk = [];
  
  for l=1:Spr
    
    curstart = (k-1)*Npp+l;
    curvec = (k-1)*Npp+1:k*Npp;
    
    stimt(l).stimulation = stim(curstart).stimulation;                 % write "stimulation" attributes
    stimt(l).stim_pattern = stim(curstart).stim_pattern(curvec);
    
    reducedm = stim(curstart).meas_pattern;
    curmeas = size(reducedm,1);
    
    % find stimulations that have nonzero measurements only on current belt
    reducedm(:,curvec) = 0;
    validm = (sum(abs(reducedm')) == 0);
    
    if ~any(validm)
      if ~fixmeas
        fprintf('Warning: No valid patterns found for dividing electrode plane measurements.\n');
        fprintf('Assuming "mono" measurement and trying to fix "balance_meas" option.\n');
      end
      fixmeas = true;
      reducedm = stim(curstart).meas_pattern;
      reducedm = reducedm - repmat(median(reducedm),size(reducedm,1),1);
      curmeas = size(reducedm,1);
      reducedm(:,curvec) = 0;
      validm = (sum(abs(reducedm')) < 1000*eps);
    end      
    
    stimt(l).meas_pattern = stim(curstart).meas_pattern(validm,curvec); % crop them out of all measurements
    
    VMcand = VM(Nmeas+1:Nmeas+curmeas);

    % normalize decomposed measurement matrix and potential vector
    if fixmeas
      mlen = size(stimt(l).meas_pattern,1);
      stimt(l).meas_pattern = stimt(l).meas_pattern - ...
        (1/mlen)*repmat(sum(stimt(l).meas_pattern),mlen,1);
      VMcand(validm) = VMcand(validm)+(1/length(VMcand(validm)))*sum(VMcand(validm));
    end
    
    VMk = [VMk; VMcand(validm)]; % chop out corresponding measurements (in a creepy way... :/ )

    Nmeas = Nmeas + curmeas;
  end
  
  stimr{k}=stimt;
  VMr{k} = VMk;
end

end
